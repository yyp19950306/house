<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.house.mapper.HouseMapper">
    <resultMap id="BaseResultMap" type="com.team.house.entity.House">
        <id column="ID" jdbcType="VARCHAR" property="id"/>
        <result column="USER_ID" jdbcType="INTEGER" property="userId"/>
        <result column="TYPE_ID" jdbcType="INTEGER" property="typeId"/>
        <result column="TITLE" jdbcType="VARCHAR" property="title"/>
        <result column="DESCRIPTION" jdbcType="VARCHAR" property="description"/>
        <result column="PRICE" jdbcType="DECIMAL" property="price"/>
        <result column="PUBDATE" jdbcType="DATE" property="pubdate"/>
        <result column="FLOORAGE" jdbcType="INTEGER" property="floorage"/>
        <result column="CONTACT" jdbcType="VARCHAR" property="contact"/>
        <result column="STREET_ID" jdbcType="INTEGER" property="streetId"/>
        <result column="ispass" jdbcType="INTEGER" property="ispass"/>
        <result column="isdel" jdbcType="INTEGER" property="isdel"/>
        <result column="path" jdbcType="VARCHAR" property="path"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    ID, USER_ID, TYPE_ID, TITLE, DESCRIPTION, PRICE, PUBDATE, FLOORAGE, CONTACT, STREET_ID, 
    ispass, isdel, path
  </sql>
    <select id="selectByExample" parameterType="com.team.house.entity.HouseExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        'false' as QUERYID,
        <include refid="Base_Column_List"/>
        from house
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from house
        where ID = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from house
    where ID = #{id,jdbcType=VARCHAR}
  </delete>
    <insert id="insert" parameterType="com.team.house.entity.House">
    insert into house (ID, USER_ID, TYPE_ID, 
      TITLE, DESCRIPTION, PRICE, 
      PUBDATE, FLOORAGE, CONTACT, 
      STREET_ID, ispass, isdel, 
      path)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{price,jdbcType=DECIMAL}, 
      #{pubdate,jdbcType=DATE}, #{floorage,jdbcType=INTEGER}, #{contact,jdbcType=VARCHAR}, 
      #{streetId,jdbcType=INTEGER}, #{ispass,jdbcType=INTEGER}, #{isdel,jdbcType=INTEGER}, 
      #{path,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.team.house.entity.House">
        insert into house
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                ID,
            </if>
            <if test="userId != null">
                USER_ID,
            </if>
            <if test="typeId != null">
                TYPE_ID,
            </if>
            <if test="title != null">
                TITLE,
            </if>
            <if test="description != null">
                DESCRIPTION,
            </if>
            <if test="price != null">
                PRICE,
            </if>
            <if test="pubdate != null">
                PUBDATE,
            </if>
            <if test="floorage != null">
                FLOORAGE,
            </if>
            <if test="contact != null">
                CONTACT,
            </if>
            <if test="streetId != null">
                STREET_ID,
            </if>
            <if test="ispass != null">
                ispass,
            </if>
            <if test="isdel != null">
                isdel,
            </if>
            <if test="path != null">
                path,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="userId != null">
                #{userId,jdbcType=INTEGER},
            </if>
            <if test="typeId != null">
                #{typeId,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="pubdate != null">
                #{pubdate,jdbcType=DATE},
            </if>
            <if test="floorage != null">
                #{floorage,jdbcType=INTEGER},
            </if>
            <if test="contact != null">
                #{contact,jdbcType=VARCHAR},
            </if>
            <if test="streetId != null">
                #{streetId,jdbcType=INTEGER},
            </if>
            <if test="ispass != null">
                #{ispass,jdbcType=INTEGER},
            </if>
            <if test="isdel != null">
                #{isdel,jdbcType=INTEGER},
            </if>
            <if test="path != null">
                #{path,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.team.house.entity.House">
        update house
        <set>
            <if test="userId != null">
                USER_ID = #{userId,jdbcType=INTEGER},
            </if>
            <if test="typeId != null">
                TYPE_ID = #{typeId,jdbcType=INTEGER},
            </if>
            <if test="title != null">
                TITLE = #{title,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                DESCRIPTION = #{description,jdbcType=VARCHAR},
            </if>
            <if test="price != null">
                PRICE = #{price,jdbcType=DECIMAL},
            </if>
            <if test="pubdate != null">
                PUBDATE = #{pubdate,jdbcType=DATE},
            </if>
            <if test="floorage != null">
                FLOORAGE = #{floorage,jdbcType=INTEGER},
            </if>
            <if test="contact != null">
                CONTACT = #{contact,jdbcType=VARCHAR},
            </if>
            <if test="streetId != null">
                STREET_ID = #{streetId,jdbcType=INTEGER},
            </if>
            <if test="ispass != null">
                ispass = #{ispass,jdbcType=INTEGER},
            </if>
            <if test="isdel != null">
                isdel = #{isdel,jdbcType=INTEGER},
            </if>
            <if test="path != null">
                path = #{path,jdbcType=VARCHAR},
            </if>
        </set>
        where ID = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.team.house.entity.House">
    update house
    set USER_ID = #{userId,jdbcType=INTEGER},
      TYPE_ID = #{typeId,jdbcType=INTEGER},
      TITLE = #{title,jdbcType=VARCHAR},
      DESCRIPTION = #{description,jdbcType=VARCHAR},
      PRICE = #{price,jdbcType=DECIMAL},
      PUBDATE = #{pubdate,jdbcType=DATE},
      FLOORAGE = #{floorage,jdbcType=INTEGER},
      CONTACT = #{contact,jdbcType=VARCHAR},
      STREET_ID = #{streetId,jdbcType=INTEGER},
      ispass = #{ispass,jdbcType=INTEGER},
      isdel = #{isdel,jdbcType=INTEGER},
      path = #{path,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=VARCHAR}
  </update>
    <select id="getHouseByUserId" resultType="com.team.house.entity.House" parameterType="java.lang.Integer">
      SELECT house.*,type.`NAME` AS tname,street.`NAME` AS sname, district.`NAME` AS dname FROM house
      LEFT JOIN `type` ON house.`TYPE_ID`=type.`ID`
      LEFT JOIN street ON house.`STREET_ID`= street.`ID`
      LEFT JOIN `district` ON street.`DISTRICT_ID`=district.`ID`
      WHERE user_id=#{userId}
  </select>
    <select id="getHouseByCondition" parameterType="com.team.house.util.HouseCondition" resultType="com.team.house.entity.House">
        SELECT
        house.id,
        user_id AS userId,
        type_id AS typeId,
        title,
        description,
        price,
        pubdate,
        floorage,
        contact,
        path,
        street_id AS streetId,
        type.`NAME` AS tname,
        street.`NAME` AS sname,
        district.`NAME` AS dname
        FROM house
        LEFT JOIN `type` ON house.`TYPE_ID`=type.`ID`
        LEFT JOIN street ON house.`STREET_ID`= street.`ID`
        LEFT JOIN `district` ON street.`DISTRICT_ID`=district.`ID`
        where 1=1
        <if test="title!=null">
            and title like concat('%',#{title},'%')
        </if>
        <if test="districtId!=null">
            and district.id=#{districtId}
        </if>
        <if test="streetId!=null">
            and street.id=#{streetId}
        </if>
        <if test="typeId!=null">
            and type_id=#{typeId}
        </if>
        <if test="minPrice!=null">
            and  price > #{minPrice}
        </if>
        <if test="maxPrice!=null">
            and price &lt; #{maxPrice}
        </if>
    </select>
</mapper>